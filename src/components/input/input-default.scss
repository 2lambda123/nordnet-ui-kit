@import '../../variables';
@import '../../functions';
@import '../../mixins';

$modifiers: (
  success: $color-success,
  warning: $color-warning,
  error: $color-danger
);

$modifiers--focus: (
  success: $color-success--focus,
  warning: $color-warning--focus,
  error: $color-danger--focus
);

@function disabled-color($color) {
  @return mix($color, $color-disabled, 60);
}

.input {
  font-size: rem(16px);
  color: $color-text;
  margin-bottom: rem(16px);
  position: relative;

  @each $modifier, $color in $modifiers {
    &--has-#{ $modifier } {
      .input {
        &__label {
          color: $color;
        }

        &__field {
          border-color: $color;
        }
      }

      &.input--is-disabled {
        .input {
          &__label {
            color: disabled-color($color);
          }

          &__field {
            border-color: disabled-color($color);
          }
        }
      }
    }
  }

  &--has-focus {
    .input {
      &__label {
        color: $color-primary--focus;
      }

      &__field {
        border-color: $color-primary--focus;
      }
    }

    @each $modifier, $color in $modifiers--focus {
      &.input--has-#{ $modifier } {
        .input {
          &__label {
            color: $color;
          }

          &__field {
            border-color: $color;
          }
        }
      }
    }
  }

  &--has-success {
    .input__field {
      padding-right: rem(16px);
    }
  }

  &--has-warning,
  &--has-error {
    .input__field {
      padding-right: rem(8px);
    }
  }

  &--is-disabled {
    color: $color-disabled;

    .input {
      &__label {
        color: $color-disabled;
      }

      &__field {
        border-color: $color-disabled;

        > input {
          cursor: not-allowed;
        }
      }
    }
  }

  &--has-addon {
    .input {
      &__field {
        display: table;
      }

      &__element,
      &__addon {
        display: table-cell;
      }

      &__element {
        width: 100%;
      }
    }
  }

  &__field {
    position: relative;
    width: 100%;
    border-bottom: rem(1px solid $color-background-disabled);
    padding-top: rem(12px);
    transition: border-color .2s $ease-out;
  }

  &__label {
    position: absolute;
    top: rem(-4px);
    left: 0;
    cursor: text;
    transition: opacity .2s $ease-out, transform .2s $ease-out, color .2s $ease-out;
    font-size: rem(12px);
    transform: translateY(#{ rem(11px) });
    opacity: 0;
    color: $color-disabled;
    pointer-events: none;

    .input--has-focus &,
    .input--has-value &, {
      opacity: 1;
      transform: translateY(0);
    }
  }

  &__element {
    display: block;
    background: none;
    border: 0;
    border-radius: 0;
    padding: rem(0 0 5px);
    width: 100%;
    transition: border-color .2s $ease-out;
    font-size: rem(16px);
    transform: translateY(#{ rem(-4px) });
    transition: transform .2s $ease-out;
    max-height: rem(27px);
    font-family: inherit;
    font-weight: inherit;

    @include placeholder {
      color: $color-text-muted;
    }

    .input--has-focus &,
    .input--has-value &, {
      transform: translateY(0);
    }

    &:focus {
      outline: none;
    }
  }

  &__validation-icon, {
    position: absolute;
    display: block;
    right: rem(4px);
    bottom: rem(10px);
    height: rem(8px);
    transition: all .2s $ease-out;

    > img {
      display: block;
      max-height: 100%;
    }
  }
}

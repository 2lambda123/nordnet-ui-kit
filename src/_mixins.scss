@import 'variables';

// ///////////////////////////////////////////////////////////////////////////////////////////////////////// //
// REM mixin: Stolen from https://github.com/bitmanic/rem and modified to only use px if rem is not feasible //
// ///////////////////////////////////////////////////////////////////////////////////////////////////////// //

@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;
  // Only use rem if enabled, true by default
  @if $use-rem {
    // If there is only one (numeric) value, return the property/value line for it.
    @if type-of($px-values) == "number" {
      #{ $property }: $px-values / $baseline-rem;
    }

    @else {
      // Create an empty list that we can dump values into
      $rem-values: ();

      @each $value in $px-values {
        // If the value is zero or not a number, return it
        @if $value == 0 or type-of( $value ) != "number" {
          $rem-values: append($rem-values, $value);
        }

        @else {
          $rem-values: append($rem-values, $value / $baseline-rem);
        }
      }

      // Return the property and its list of converted values
      #{ $property }: $rem-values;
    }
  }

  @else {
    #{ $property }: $px-values;
  }
}
